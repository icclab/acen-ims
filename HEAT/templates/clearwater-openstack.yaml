# Copyright 2015 Zuercher Hochschule fuer Angewandte Wissenschaften
# All Rights Reserved.
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.

heat_template_version: 2013-05-23

description: 'Simple template to deploy Project Clearwater infrastructure based on http://clearwater.readthedocs.org/en/release-65/Manual_Install/'

parameters:
  private_mgmt_net: 
    type: string
    description: ID of private network mgmt
    default: 13f5ddf8-3c09-4aee-b66b-6dd4abd9d529

  public_net: 
    type: string
    description: ID of public network
    default: 77e659dd-f1b4-430c-ac6f-d92ec0137c85

  image:
    type: string
    description: Ubuntu 14.04 image
    default: 06c55fd3-dad5-47eb-8c20-9e0e1c378ed8

  flavor:
    type: string
    description: VM flavor
    default: m1.medium

  zone:
    type: string
    description: DNS zone
    default: example.com

  dnssec_key:
    type: string
    description: DNS secret key
    default: zPDgJ0y0AEmCP7fzCi93zfBRYRcYdDDv5xrmwyv7rLgzqSnBlT8n0o1mrHTNpety1QUK55+nBKAedcRluAW39w==

  public_ssh_key:
    type: string
    description: Public SSH key
    default: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCoAv8WGeqtGket7cSai5zkYbOkh9a3FFH5yKQWHaxdGZfs9RU7CNbJJ39on4/+RoeffF3YK54EjYW4LtANFGzB8jwQuArO+3H1vLwxSkDTeHgBNfV2daGN00/9BmO1mBvVK3Re76rimvjH8Rm7y0Jc39RTZgeiNF0DL4uWOl2S0nVu2qyYZ7WIWNjPfknYeVUPNJUiEONBNfF7KPdrsGsUlyhQm0/O0+R3g4hU6PeAtOPTVUR43Z1mmrfW8oVp2i/0k3I9ld78suBe7De8IpwhDs/rrB7BNLQ34eA2Sgl/Xcjlkj7+XfiYIJ5Iv7KJcqJlhhnVQmBZ7G8kr46VfNvB vojtechcima@Vojtechs-MacBook-Pro.local

resources:
  sg:
    type: OS::Neutron::SecurityGroup
    properties:
      name: clearwater_sg
      description: ICMP, SSH, SNMP, M/Monit, etcd
      rules:
      - protocol: icmp
      - protocol: tcp
        port_range_min: 22
        port_range_max: 22
      - protocol: udp
        port_range_min: 161
        port_range_max: 162
      - protocol: tcp
        port_range_min: 2812
        port_range_max: 2812
      - protocol: tcp
        port_range_min: 2380
        port_range_max: 2380
      - protocol: tcp
        port_range_min: 4000
        port_range_max: 4000
 
  ralf:
    type: OS::Nova::Server
    properties:
      name: clearwater_ralf
      image: { get_param: image }
      flavor: { get_param: flavor}
      networks:
        - port: { get_resource: ralf_port }
      user_data:
        str_replace:
          template: { get_file: ../scripts/clearwater-deploy.sh }
          params:
            $local_ip: { get_attr: [ralf_port, fixed_ips, 0, ip_address] }
            $public_ip: { get_attr: [ralf_floating_ip, floating_ip_address] }
            $ralf_local_ip: { get_attr: [ralf_port, fixed_ips, 0, ip_address] }
            $homer_local_ip: { get_attr: [homer_port, fixed_ips, 0, ip_address] }
            $ellis_local_ip: { get_attr: [ellis_port, fixed_ips, 0, ip_address] }
            $bono_local_ip: { get_attr: [bono_port, fixed_ips, 0, ip_address] }
            $sprout_local_ip: { get_attr: [sprout_port, fixed_ips, 0, ip_address] }
            $homestead_local_ip: { get_attr: [homestead_port, fixed_ips, 0, ip_address] }
            $zone: { get_param: zone }
            $dnssec_key: { get_param: dnssec_key }
            $dns_ip: { get_attr: [dns_floating_ip, floating_ip_address] }
            $hostname: 'ralf'
            $public_ssh_key: { get_param: public_ssh_key }

  ralf_sg:
    type: OS::Neutron::SecurityGroup
    properties:
      name: clearwater_ralf_sg
      description: REST, Chronos, Memcached
      rules:
      - protocol: tcp
        port_range_min: 10888
        port_range_max: 10888
      - protocol: tcp
        port_range_min: 7253
        port_range_max: 7253
      - protocol: tcp
        port_range_min: 11211
        port_range_max: 11211

  ralf_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_mgmt_net }
      replacement_policy: AUTO
      security_groups: [{ get_resource: sg }, { get_resource: ralf_sg }]

  ralf_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net }
      port_id: { get_resource:  ralf_port }

  homer:
    type: OS::Nova::Server
    properties:
      name: clearwater_homer
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks:
        - port: { get_resource: homer_port }
      user_data:
        str_replace:
          template: { get_file: ../scripts/clearwater-deploy.sh }
          params:
            $local_ip: { get_attr: [homer_port, fixed_ips, 0, ip_address] }
            $public_ip: { get_attr: [homer_floating_ip, floating_ip_address] }
            $ralf_local_ip: { get_attr: [ralf_port, fixed_ips, 0, ip_address] }
            $homer_local_ip: { get_attr: [homer_port, fixed_ips, 0, ip_address] }
            $ellis_local_ip: { get_attr: [ellis_port, fixed_ips, 0, ip_address] }
            $bono_local_ip: { get_attr: [bono_port, fixed_ips, 0, ip_address] }
            $sprout_local_ip: { get_attr: [sprout_port, fixed_ips, 0, ip_address] }
            $homestead_local_ip: { get_attr: [homestead_port, fixed_ips, 0, ip_address] }
            $zone: { get_param: zone }
            $dnssec_key: { get_param: dnssec_key }
            $dns_ip: { get_attr: [dns_floating_ip, floating_ip_address] }
            $hostname: 'homer'
            $public_ssh_key: { get_param: public_ssh_key }

  homer_sg:
    type: OS::Neutron::SecurityGroup
    properties:
      name: clearwater_homer_sg
      description: REST, Cassandra
      rules:
      - protocol: tcp
        port_range_min: 7888
        port_range_max: 7888
      - protocol: tcp
        port_range_min: 7000
        port_range_max: 7000

  homer_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_mgmt_net }
      replacement_policy: AUTO
      security_groups: [{ get_resource: sg }, { get_resource: homer_sg }]

  homer_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net }
      port_id: { get_resource:  homer_port }
 
  ellis:
    type: OS::Nova::Server
    properties:
      name: clearwater_ellis
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks:
        - port: { get_resource: ellis_port }
      user_data:
        str_replace:
          template: { get_file: ../scripts/clearwater-deploy.sh }
          params:
            $local_ip: { get_attr: [ellis_port, fixed_ips, 0, ip_address] }
            $public_ip: { get_attr: [ellis_floating_ip, floating_ip_address] }
            $ralf_local_ip: { get_attr: [ralf_port, fixed_ips, 0, ip_address] }
            $homer_local_ip: { get_attr: [homer_port, fixed_ips, 0, ip_address] }
            $ellis_local_ip: { get_attr: [ellis_port, fixed_ips, 0, ip_address] }
            $bono_local_ip: { get_attr: [bono_port, fixed_ips, 0, ip_address] }
            $sprout_local_ip: { get_attr: [sprout_port, fixed_ips, 0, ip_address] }
            $homestead_local_ip: { get_attr: [homestead_port, fixed_ips, 0, ip_address] }
            $zone: { get_param: zone }
            $dnssec_key: { get_param: dnssec_key }
            $dns_ip: { get_attr: [dns_floating_ip, floating_ip_address] }
            $hostname: 'ellis'
            $public_ssh_key: { get_param: public_ssh_key }

  ellis_sg:
    type: OS::Neutron::SecurityGroup
    properties:
      name: clearwater_ellis_sg
      description: HTTP(s)
      rules:
      - protocol: tcp
        port_range_min: 80
        port_range_max: 80
      - protocol: tcp
        port_range_min: 443
        port_range_max: 443

  ellis_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_mgmt_net }
      replacement_policy: AUTO
      security_groups: [{ get_resource: sg }, { get_resource: ellis_sg }]

  ellis_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net }
      port_id: { get_resource:  ellis_port }

  bono:
    type: OS::Nova::Server
    properties:
      name: clearwater_bono
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks:
        - port: { get_resource: bono_port }
      user_data:
        str_replace:
          template: { get_file: ../scripts/clearwater-deploy.sh }
          params:
            $local_ip: { get_attr: [bono_port, fixed_ips, 0, ip_address] }
            $public_ip: { get_attr: [bono_floating_ip, floating_ip_address] }
            $ralf_local_ip: { get_attr: [ralf_port, fixed_ips, 0, ip_address] }
            $homer_local_ip: { get_attr: [homer_port, fixed_ips, 0, ip_address] }
            $ellis_local_ip: { get_attr: [ellis_port, fixed_ips, 0, ip_address] }
            $bono_local_ip: { get_attr: [bono_port, fixed_ips, 0, ip_address] }
            $sprout_local_ip: { get_attr: [sprout_port, fixed_ips, 0, ip_address] }
            $homestead_local_ip: { get_attr: [homestead_port, fixed_ips, 0, ip_address] }
            $zone: { get_param: zone }
            $dnssec_key: { get_param: dnssec_key }
            $dns_ip: { get_attr: [dns_floating_ip, floating_ip_address] }
            $hostname: 'bono'
            $public_ssh_key: { get_param: public_ssh_key }

  bono_sg:
    type: OS::Neutron::SecurityGroup
    properties:
      name: clearwater_bono_sg
      description: STUN and SIP signaling, RPT forwarding
      rules:
      - protocol: tcp
        port_range_min: 3478
        port_range_max: 3478
      - protocol: udp
        port_range_min: 3478
        port_range_max: 3478
      - protocol: tcp
        port_range_min: 5060
        port_range_max: 5060
      - protocol: udp
        port_range_min: 5060
        port_range_max: 5060
      - protocol: tcp
        port_range_min: 5062
        port_range_max: 5062
      - protocol: udp
        port_range_min: 32768
        port_range_max: 65535
      - protocol: tcp
        port_range_min: 5058
        port_range_max: 5058

  bono_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_mgmt_net }
      replacement_policy: AUTO
      security_groups: [{ get_resource: sg }, { get_resource: bono_sg }]

  bono_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net }
      port_id: { get_resource:  bono_port }
 
  sprout:
    type: OS::Nova::Server
    properties:
      name: clearwater_sprout
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks:
        - port: { get_resource: sprout_port }
      user_data:
        str_replace:
          template: { get_file: ../scripts/clearwater-deploy.sh }
          params:
            $local_ip: { get_attr: [sprout_port, fixed_ips, 0, ip_address] }
            $public_ip: { get_attr: [sprout_floating_ip, floating_ip_address] }
            $ralf_local_ip: { get_attr: [ralf_port, fixed_ips, 0, ip_address] }
            $homer_local_ip: { get_attr: [homer_port, fixed_ips, 0, ip_address] }
            $ellis_local_ip: { get_attr: [ellis_port, fixed_ips, 0, ip_address] }
            $bono_local_ip: { get_attr: [bono_port, fixed_ips, 0, ip_address] }
            $sprout_local_ip: { get_attr: [sprout_port, fixed_ips, 0, ip_address] }
            $homestead_local_ip: { get_attr: [homestead_port, fixed_ips, 0, ip_address] }
            $zone: { get_param: zone }
            $dnssec_key: { get_param: dnssec_key }
            $dns_ip: { get_attr: [dns_floating_ip, floating_ip_address] }
            $hostname: 'sprout'
            $public_ssh_key: { get_param: public_ssh_key }

  sprout_sg:
    type: OS::Neutron::SecurityGroup
    properties:
      name: clearwater_sprout_sg
      description: SIP signaling, Chronos, Cassandra, HTTPs, HSS
      rules:
      - protocol: tcp
        port_range_min: 5054
        port_range_max: 5054
      - protocol: tcp
        port_range_min: 5052
        port_range_max: 5052
      - protocol: tcp
        port_range_min: 11211
        port_range_max: 11211
      - protocol: tcp
        port_range_min: 7253
        port_range_max: 7253
      - protocol: tcp
        port_range_min: 7000
        port_range_max: 7000
      - protocol: tcp
        port_range_min: 9160
        port_range_max: 9160
      - protocol: tcp
        port_range_min: 9888
        port_range_max: 9888
      - protocol: tcp
        port_range_min: 443
        port_range_max: 443

  sprout_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_mgmt_net }
      replacement_policy: AUTO
      security_groups: [{ get_resource: sg }, { get_resource: sprout_sg }]

  sprout_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net }
      port_id: { get_resource:  sprout_port }
 
  homestead:
    type: OS::Nova::Server
    properties:
      name: clearwater_homestead
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks:
        - port: { get_resource: homestead_port }
      user_data:
        str_replace:
          template: { get_file: ../scripts/clearwater-deploy.sh }
          params:
            $local_ip: { get_attr: [homestead_port, fixed_ips, 0, ip_address] }
            $public_ip: { get_attr: [homestead_floating_ip, floating_ip_address] }
            $ralf_local_ip: { get_attr: [ralf_port, fixed_ips, 0, ip_address] }
            $homer_local_ip: { get_attr: [homer_port, fixed_ips, 0, ip_address] }
            $ellis_local_ip: { get_attr: [ellis_port, fixed_ips, 0, ip_address] }
            $bono_local_ip: { get_attr: [bono_port, fixed_ips, 0, ip_address] }
            $sprout_local_ip: { get_attr: [sprout_port, fixed_ips, 0, ip_address] }
            $homestead_local_ip: { get_attr: [homestead_port, fixed_ips, 0, ip_address] }
            $zone: { get_param: zone }
            $dnssec_key: { get_param: dnssec_key }
            $dns_ip: { get_attr: [dns_floating_ip, floating_ip_address] }
            $hostname: 'homestead' 
            $public_ssh_key: { get_param: public_ssh_key }

  homestead_sg:
    type: OS::Neutron::SecurityGroup
    properties:
      name: clearwater_homestead_sg
      description: REST
      rules:
      - protocol: tcp
        port_range_min: 8888
        port_range_max: 8889
      - protocol: tcp
        port_range_min: 7000
        port_range_max: 7000

  homestead_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_mgmt_net }
      replacement_policy: AUTO
      security_groups: [{ get_resource: sg }, { get_resource: homestead_sg }]

  homestead_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net }
      port_id: { get_resource:  homestead_port }

  dns_server:
    type: OS::Nova::Server
    properties:
      name: clearwater_dns
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks:
        - port: { get_resource: dns_port }
      user_data:
        str_replace:
          template: { get_file: ../scripts/clearwater-dns.sh }
          params:
            $zone: { get_param: zone }
            $dnssec_key: { get_param: dnssec_key }
            $public_ip: { get_attr: [ dns_floating_ip, floating_ip_address ] }
            $public_ssh_key: { get_param: public_ssh_key }

  dns_sg:
    type: OS::Neutron::SecurityGroup
    properties:
      name: clearwater_dns_sg
      description: Security group for DNS node
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - protocol: udp
          port_range_min: 53
          port_range_max: 53
        - protocol: tcp
          port_range_min: 53
          port_range_max: 53

  dns_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_mgmt_net }
      security_groups:
        - { get_resource: dns_sg }

  dns_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net }
      port_id: { get_resource: dns_port }

outputs:
  ralf_external_ip:
    description: Instance external IP address
    value: { get_attr: [ralf_floating_ip, floating_ip_address ] }
  ralf_private_ip:
    description: Instance internal IP address
    value: { get_attr: [ralf_port, fixed_ips, 0, ip_address]}
  ellis_external_ip:
    description: Instance external IP address
    value: { get_attr: [ellis_floating_ip, floating_ip_address ] }
  ellis_private_ip:
    description: Instance internal IP address
    value: { get_attr: [ellis_port, fixed_ips, 0, ip_address]}
  homer_external_ip:
    description: Instance external IP address
    value: { get_attr: [homer_floating_ip, floating_ip_address ] }
  homer_private_ip:
    description: Instance internal IP address
    value: { get_attr: [homer_port, fixed_ips, 0, ip_address]}
  sprout_external_ip:
    description: Instance external IP address
    value: { get_attr: [sprout_floating_ip, floating_ip_address ] }
  sprout_private_ip:
    description: Instance internal IP address
    value: { get_attr: [sprout_port, fixed_ips, 0, ip_address]}
  homestead_external_ip:
    description: Instance external IP address
    value: { get_attr: [homestead_floating_ip, floating_ip_address ] }
  homestead_private_ip:
    description: Instance internal IP address
    value: { get_attr: [homestead_port, fixed_ips, 0, ip_address]}
  bono_external_ip:
    description: Instance external IP address
    value: { get_attr: [bono_floating_ip, floating_ip_address ] }
  bono_private_ip:
    description: Instance internal IP address
    value: { get_attr: [bono_port, fixed_ips, 0, ip_address]}
  dns_external_ip:
    description: Instance external IP address
    value: { get_attr: [dns_floating_ip, floating_ip_address ] }
  dns_private_ip:
    description: Instance internal IP address
    value: { get_attr: [dns_port, fixed_ips, 0, ip_address]}
